{"version":3,"sources":["components/Wrapper/index.js","components/Title/index.js","components/ImageCard/index.js","App.js","index.js"],"names":["Wrapper","props","className","children","Title","count","highScore","result","ImageCard","alt","id","key","src","image","data-clicked","clicked","onClick","handleClick","collection","images","App","state","console","log","guessedCorrectly","newArray","map","item","newItem","handleCorrectGuess","handleIncorrectGuess","setState","shuffle","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"wnCAOeA,MAJf,SAAiBC,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAME,W,MCa1BC,MAdf,SAAeH,GACb,OACE,yBAAKC,UAAU,6BACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,mBAAmBD,EAAME,UACvC,uBAAGD,UAAU,QAAb,4EACA,wBAAIA,UAAU,SACd,uBAAGA,UAAU,QAAb,UAA4BD,EAAMI,MAAlC,kBAAwDJ,EAAMK,WAC9D,uBAAGJ,UAAU,iDAAiDD,EAAMM,W,MCC7DC,MARf,SAAmBP,GACjB,OACE,yBAAKC,UAAU,gBACb,yBAAKO,IAAKR,EAAMS,GAAIC,IAAKV,EAAMS,GAAIE,IAAKX,EAAMY,MAAOC,eAAcb,EAAMc,QAASC,QAAS,kBAAMf,EAAMgB,YAAYhB,EAAMS,S,6PCC/H,IAAMQ,EAAa,CAAEC,UA8ENC,E,2MAzEbC,MAAQ,CACNhB,MAAO,EACPC,UAAW,EACXa,SACAZ,OAAQ,I,EAGVU,YAAc,SAACP,GACbY,QAAQC,IAAI,EAAKF,MAAMF,QACvB,IAAIK,GAAmB,EACjBC,EAAW,EAAKJ,MAAMF,OAAOO,KAAI,SAAAC,GACrC,IAAMC,E,yVAAO,IAAQD,GAOrB,OANIC,EAAQlB,KAAOA,IACZkB,EAAQb,UACXa,EAAQb,SAAU,EAClBS,GAAmB,IAGhBI,KAETJ,EACI,EAAKK,mBAAmBJ,GACxB,EAAKK,qBAAqBL,I,EAGhCI,mBAAqB,SAACJ,GACpB,EAAKnB,YACL,EAAKyB,SAAS,CACZ1B,MAAO,EAAKgB,MAAMhB,MAAQ,EAC1Bc,OAAQa,IAAQP,GAChBlB,OAAQ,M,EAKZD,UAAY,WACN,EAAKe,MAAMf,WAAa,EAAKe,MAAMhB,OACrC,EAAK0B,SAAS,CACZzB,UAAY,EAAKe,MAAMhB,MAAQ,K,EAKrCyB,qBAAuB,WACrB,EAAKC,SAAS,CACZZ,OAAQa,IAAQd,EAAWC,QAC3Bd,MAAO,EACPE,OAAQ,yB,wEAIF,IAAD,OACP,OACE,6BACE,kBAAC,EAAD,CAAOF,MAAO4B,KAAKZ,MAAMhB,MAAOC,UAAW2B,KAAKZ,MAAMf,UAAWC,OAAQ0B,KAAKZ,MAAMd,QAApF,gBACA,kBAAC,EAAD,KAEI0B,KAAKZ,MAAMF,OAAOO,KAAI,SAAAb,GACpB,OAAO,kBAAC,EAAD,CACLA,MAAOA,EAAMA,MACbH,GAAIG,EAAMH,GACVK,QAASF,EAAME,QACfE,YAAa,EAAKA,uB,GA/DhBiB,IAAMC,WCPxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0dcb155f.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return (\n    <div className=\"jumbotron jumbotron-fluid\">\n      <div className=\"container\">\n        <h1 className=\"display-4 title\">{props.children}</h1>\n        <p className=\"lead\">Click on an image to earn points, but don't click on any more than once!</p>\n        <hr className=\"my-4\"></hr>\n        <p className=\"lead\">Score: {props.count} | High Score: {props.highScore}</p>\n        <p className=\"lead text-center font-weight-bold text-danger\">{props.result}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./style.css\";\n\n\nfunction ImageCard(props) {\n  return (\n    <div className=\"imgContainer\">\n      <img alt={props.id} key={props.id} src={props.image} data-clicked={props.clicked} onClick={() => props.handleClick(props.id)} />\n    </div>\n  );\n}\n\nexport default ImageCard;\n","import React from 'react';\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport ImageCard from \"./components/ImageCard\"\nimport './App.css';\nimport images from \"./images.json\";\nimport shuffle from \"shuffle-array\";\n\nconst collection = { images };\n// shuffle(collection.images);\n\n// Counter\nclass App extends React.Component {\n  state = {\n    count: 0,\n    highScore: 0,\n    images,\n    result: \"\"\n  };\n\n  handleClick = (id) => {\n    console.log(this.state.images)\n    let guessedCorrectly = false;\n    const newArray = this.state.images.map(item => {\n      const newItem = { ...item };\n      if (newItem.id === id) {\n        if (!newItem.clicked) {\n          newItem.clicked = true;\n          guessedCorrectly = true;\n        }\n      }\n      return newItem\n    })\n    guessedCorrectly\n      ? this.handleCorrectGuess(newArray)\n      : this.handleIncorrectGuess(newArray)\n  };\n\n  handleCorrectGuess = (newArray) => {\n    this.highScore()\n    this.setState({\n      count: this.state.count + 1,\n      images: shuffle(newArray),\n      result: \"\"\n    });\n    ;\n  }\n\n  highScore = () => {\n    if (this.state.highScore <= this.state.count) {\n      this.setState({\n        highScore: (this.state.count + 1)\n      })\n    }\n  }\n\n  handleIncorrectGuess = () => {\n    this.setState({\n      images: shuffle(collection.images),\n      count: 0,\n      result: \"You lose! Try again\"\n    })\n  }\n\n  render() {\n    return (\n      < div >\n        <Title count={this.state.count} highScore={this.state.highScore} result={this.state.result}>Clicky Game!</Title>\n        <Wrapper>\n          {\n            this.state.images.map(image => {\n              return <ImageCard\n                image={image.image}\n                id={image.id}\n                clicked={image.clicked}\n                handleClick={this.handleClick}\n              />\n            })\n          }\n        </Wrapper >\n      </div >\n    )\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}